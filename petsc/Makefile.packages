# -*- makefile -*-
################################################################
####
#### make include file with package definitions for petsc
####
################################################################

info ::
	@echo "    set nonzero for packages: ${PACKAGELIST}"
.PHONY: package_options
PACKAGELIST = LIBCEED CHACO EIGEN FFTW HYPRE KOKKOS MPE MUMPS \
    PETSC4PY PTSCOTCH SLEPC SUPERLU TRIANGLE ZOLTAN
package_options :
	@export chaco=${CHACO} \
	 && export eigen=${EIGEN} && export fftw=${FFTW} \
	 && export hypre=${HYPRE} && export kokkos=${KOKKOS} \
	 && export libceed=${LIBCEED} \
	     && export libceed_extra="--download-libceed-commit=origin/main" \
	 && export mpe=${MPE} \
	 && export mumps=${MUMPS} \
	     && export mumps_extra="--download-scalapack=yes --download-blacs=yes --download-parmetis=yes --download-metis=yes" \
	 && export petsc4py=${PETSC4PY} \
	     && export petsc4py_extra="--with-python=1 --with-python-exec=python3" \
	 && export ptscotch=${PTSCOTCH} && export slepc=${SLEPC} \
	 && export superlu=${SUPERLU} \
	     && export superlu_extra="--with-superlu_dist=1 --download-superlu_dist=1 --with-cxx-dialect=C++11 --with-openmp=1" \
	 && export triangle=${TRIANGLE} \
	 && export zoltan=${ZOLTAN} \
	 \
	 && downloads="" \
	 && for p in \
	        libceed chaco eigen fftw hypre kokkos mpe mumps \
	        petsc4py ptscotch slepc superlu triangle zoltan \
	        ; do \
	      eval optval=\$${$$p} \
	       && echo "p=$$p optval=$$optval" >/dev/null \
	       && if [ ! -z "$$optval" ] ; then \
	            eval extra=\$${$${p}_extra} \
	             && downloads="$$downloads --with-$${p}=1 --download-$${p}=1 $${extra}" \
	          ; fi \
	    ; done \
	 && echo $${downloads}

##  PACKAGES += --with-fortran-bindings=1 --with-fc=`which mpif90`
##  PACKAGES += --with-fortran-bindings=0 --with-fc=0

HDF5 = 0
FORTRAN = 0
info ::
	@echo "    [ HDF5=0/1 (default: ${HDF5})]"
ifeq "${HDF5}" "1"
  ifdef TACC_PHDF5_DIR
    PACKAGES += --with-hdf5=1 --with-hdf5-dir=${TACC_PHDF5_DIR}
  else
    PACKAGES += --with-hdf5=1 --download-hdf5=1 --download-hdf5-configure-arguments="--with-zlib=yes" --download-hdf5-fortran-bindings=1
  endif
endif

info ::
	@echo "parameter_settings"
.PHONY: param_settings
PARAMETERLIST = ALIGN DEBUG INT PRECISION SCALAR
parameterlist = align debug fortran int precision scalar
param_settings :
	@export align=${ALIGN} \
	 && export debug=${DEBUG} \
	 && export fortran=${FORTRAN} \
	     && export fortran_option_1="--with-fortran-bindings=1" \
	     && export fortran_option_0="--with-fortran-bindings=0 --with-fc=0" \
	 && export int=${INT} \
	     && export int_option_64="--with-64-bit-indices=1" \
	 && export precision=${PRECISION} \
	 && export scalar=${SCALAR} \
	 && parameters= && dev=1 \
	 && for p in ${parameterlist} ; do \
	      eval optval=\$${$$p} \
	       && if [ ! -z "$$optval" ] ; then \
	            echo "p=$$p optval=$$optval" >/dev/null \
	             && eval explicit="\$${$${p}_option_$${optval}}" \
	             && echo "$${p}: explicit=$${explicit}" >/dev/null \
	             && if [ ! -z "$${explicit}" ] ; then \
	                  option="$${explicit}" \
	                ; else \
	                  eval optdef="\$${$${p}_default}" \
	                   && option="--with-$${p}=$${optval}" \
	                ; fi \
	             && echo "$${p}: option=$${option}" >/dev/null \
	             && export parameters="$$parameters $$option" \
	          ; fi \
	    ; done \
	 && echo $${parameters}

paramstuff :
	        $$( if [ "${INT}" = "64" ] ; then echo --with-64-bit-indices=1 ; fi ) \
	        --with-precision=$$( cd $$scriptdir \
	                && make --no-print-directory precstring PRECISION=${PRECISION} ) \
	        --with-memalign=${ALIGN} \
.PHONY: precstring
precstring :
	@if [ "${PRECISION}" = "quad" ] ; then \
	    echo "__float128 --download-f2cblaslapack" \
	; else echo ${PRECISION} ; fi

