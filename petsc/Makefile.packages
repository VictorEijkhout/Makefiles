# -*- makefile -*-
################################################################
####
#### make include file with package definitions for petsc
####
################################################################

info ::
	@echo "================ package handling"
	@PACKAGELIST="$$( \
	    for p in ${packagelist} ; do echo $$p | tr a-z A-Z ; done \
	    | awk '{pp=pp FS $$0} END {print pp}' \
	        )" \
	 && echo "    set nonzero for packages: $${PACKAGELIST}"

##
## tacc module names or package names
## 
packagelist = amgx chaco eigen fftw hdf5 hypre kokkos mpe \
    metis mumps parmetis petsc4py ptscotch \
    scalapack slepc slepc4py superlu triangle
# libceed

##
## generate the line with all package options
##
.PHONY: package_options
package_options :
	@downloads="" \
	 && for p in ${packagelist} ; do \
	      export P=$$( echo $$p | tr a-z A-Z ) && eval optval=\$${$${P}} \
	       && echo "package select $$p optval=$$optval" && echo >/dev/null \
	       && if [ "$$optval" = "1" ] ; then \
	            plocation=$$( make --no-print-directory package_location PACKAGE=$${p} ) \
	             && eval extra=\$${$${p}_extra} \
	             && downloads="$$downloads --with-$${p}=1 $${plocation}" \
	          ; fi \
	    ; done \
	 && echo $${downloads}
.PHONY : package_location
##
## make -with-foo-download vs --foo-dir=/home/victor/foo option
## this is invoked above by package_options
##
package_location :
	@export p=${PACKAGE} && export P=$$( echo $$p | tr a-z A-Z ) \
	     && export hdf5_extra="--download-hdf5-configure-arguments=\"--with-zlib=yes\" --download-hdf5-fortran-bindings=0" \
	     && export libceed_extra="--download-libceed-commit=origin/main" \
	     && export mumps_extra="--download-scalapack=yes --download-blacs=yes --download-parmetis=yes --download-metis=yes" \
	     && export petsc4py_extra="--with-python=1 --with-python-exec=python3" \
	     && export slepc4py_extra="--with-slepc=1 --download-slepc=1 --download-slepc-configure-arguments=--with-slepc4py" \
	     && export superlu_extra="--with-superlu_dist=1 --download-superlu_dist=1 --with-cxx-dialect=C++11 --with-openmp=1" \
	 && if [ "$${p}" = "hdf5" ] ; then \
	      taccvarname=TACC_PHDF5_DIR \
	    ; else \
	      taccvarname=TACC_$${P}_DIR ; fi \
	 && eval taccvar=\$${$${taccvarname}} \
	 && echo "tacc var $${taccvarname} = $${taccvar}" >/dev/null \
	 && if [ ! -z "$${taccvar}" ] ; then \
	        echo "--with-$${p}-dir=$${taccvar}" \
	    ; else \
	        eval echo "--download-$${p}=1 \$${$${p}_extra}" \
	    ; fi

##
## debug rule: not used in production
##
.PHONY: package_values
package_values :
	for p in ${packagelist} ; do \
	    P=$$( echo $${p} | tr a-z A-Z ) \
	     && eval export $${p}=\$${$${P}} \
	     && echo "$$p / $$P / $${hdf5} / ${HDF5}" \
	; done

MPI_FLAGS = --with-mpi-compilers=1
ifeq "${TACC_SYSTEM}" "nvarm"
  MPI_FLAGS = --with-mpi-compilers=1 --with-cc=`which mpicc` --with-cxx=`which mpicxx` 
endif

X = 0
info ::
	@echo "    [ X=0/1, default=${X}]"
WITH_X = "--with-x=1"

info ::
	@echo "parameter_settings"
.PHONY: param_settings
PARAMETERLIST = ALIGN DEBUG INT PRECISION SCALAR
parameterlist = align debug fortran int precision scalar
param_settings :
	@export align=${ALIGN} \
	 && export debug=${DEBUG} \
	 && export fortran=${FORTRAN} \
	     && export fortran_option_90="--with-fortran-bindings=1" \
	     && export fortran_option_08="--with-fortran-bindings=1 --with-mpi-f90module-visibility=0" \
	     && export fortran_option_0="--with-fortran-bindings=0 --with-fc=0" \
	 && export int=${INT} \
	     && export int_option_64="--with-64-bit-indices=1" \
	 && export precision=${PRECISION} \
	 && export scalar=${SCALAR} \
	 \
	 && parameters="useThreads=0 --with-perfstubs-tau=1 ${MPI_FLAGS} -with-np=${JCOUNT}" \
	 && if [ ${X} -eq 1 ] ; then parameters="$${parameters} ${WITH_X}" ; fi \
	 && for p in ${parameterlist} ; do \
	      eval optval=\$${$$p} \
	       && if [ ! -z "$$optval" ] ; then \
	            echo "p=$$p optval=$$optval" >/dev/null \
	             && eval explicit="\$${$${p}_option_$${optval}}" \
	             && echo "$${p}: explicit=$${explicit}" >/dev/null \
	             && if [ ! -z "$${explicit}" ] ; then \
	                  option="$${explicit}" \
	                ; else \
	                  eval optdef="\$${$${p}_default}" \
	                   && if [ "$$p" = "scalar" ] ; then \
	                        option="--with-scalar-type=$${optval}" \
	                      ; else \
	                        option="--with-$${p}=$${optval}" ; fi \
	                ; fi \
	             && echo "$${p}: option=$${option}" >/dev/null \
	             && export parameters="$$parameters $$option" \
	          ; fi \
	    ; done \
	 && echo $${parameters}

paramstuff :
	        $$( if [ "${INT}" = "64" ] ; then echo --with-64-bit-indices=1 ; fi ) \
	        --with-precision=$$( cd $$scriptdir \
	                && make --no-print-directory precstring PRECISION=${PRECISION} ) \
	        --with-memalign=${ALIGN} \
.PHONY: precstring
precstring :
	@if [ "${PRECISION}" = "quad" ] ; then \
	    echo "__float128 --download-f2cblaslapack" \
	; else echo ${PRECISION} ; fi

